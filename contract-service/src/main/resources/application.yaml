configurl: http://localhost:8090
spring:
  application:
    name: contract-service
  datasource:
    url: "jdbc:postgresql://localhost:5436/contract_service"
    username: postgres
    password: test
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    showSql: true
    hibernate:
      ddlAuto: update
  cloud:
    function:
      enabled: false
    stream:
      default-binder: kafka
      function:
        definition: processPlanEvent
      bindings:
        contract-detail-created-topic:
          destination: ContractDetailEvent
          binder: kafka

      kafka:
        binder:
          brokers: localhost:9092
          zkNodes: localhost:2181
          auto-create-topics: true
          autoStartup: false
          required: false
          enabled: false
          configuration:
            key.serializer: org.apache.kafka.common.serialization.StringSerializer
            value.serializer: org.springframework.kafka.support.serializer.JsonSerializer
            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value.deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
            spring.json.trusted.packages: "com.gygy.contractservice.event"
            max.block.ms: 1000
            reconnect.backoff.ms: 1000
            reconnect.backoff.max.ms: 5000
            request.timeout.ms: 5000
    config:
      profile: local
  config:
    import: configserver:${configurl}
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: contract-service-group
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: "http://localhost:9411/api/v2/spans"

server:
  port: 9030