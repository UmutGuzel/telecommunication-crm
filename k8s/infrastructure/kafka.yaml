apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
data:
  KAFKA_CFG_NODE_ID: "1"
  KAFKA_CFG_PROCESS_ROLES: "broker,controller"
  KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
  KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
  KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
  KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka.telecom-crm.svc.cluster.local:9092"
  KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka.telecom-crm.svc.cluster.local:9093"
  ALLOW_PLAINTEXT_LISTENER: "yes"
  KAFKA_CFG_BROKER_ID: "1"
  KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
  BITNAMI_DEBUG: "yes"
  KAFKA_KRAFT_CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  selector:
    app: kafka
  ports:
  - name: plaintext
    port: 9092
    targetPort: 9092
  - name: controller
    port: 9093
    targetPort: 9093
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: bitnami/kafka:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
          name: plaintext
        - containerPort: 9093
          name: controller
        envFrom:
        - configMapRef:
            name: kafka-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 20
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 30
          periodSeconds: 10